{"version":3,"sources":["webpack:///webpack/bootstrap 0a9cf70fe41961fcad13","webpack:///./src/Img.js","webpack:///./src/RLE.js","webpack:///./src/SLA.js","webpack:///./src/SlaRleWorker.js"],"names":["getPixelComponent","imageData","x","y","colorIdx","data","width","getRect","height","Uint8ClampedArray","row","begin","end","dataRow","slice","offset","set","ImageData","getRow","convertToGrayscale","imgData","w","h","graySum","newImgData","buf","ArrayBuffer","length","buf8","buf32","Uint32Array","col","red","green","blue","gray","parseInt","threshold","gradientSimple","operator","dst","tempLine","gradSum","xLeft","Math","max","xRight","min","yUp","yDown","vr","vl","vd","vu","gradX","abs","gradY","gradient","angle","atan","PI","q","push","binarize","value","gradientAndBinarize","gradSobelX","gradientResult","binImgData","module","exports","runLengthEncoding","result","previous","n","current","val","len","start","sliceDigits","rle","units","digits","dsize","outer","inner","m","i","possibilites","pos","digit","normalizeDigits","normalization","sum","d","mod","a","findSimilarNumbers","defaults","leftDigitsOdd","leftDigitsEven","rightDigits","parity","j","difference","digitSim","o","template","odd","even","EAN","r","number","oddMin","apply","indexOf","evenMin","toString","firstDigit","checksum","findScanlines","SLASteps","SlaParams","steps","floor","MaxDist","maxDist","MinLength","minLength","resultSLs","pixel","angleSum","scanlineLength","foundSomething","nothingFound","scanline","angleAVG","othPixelValue","othAngle","angleDiff","minGradient","findPBCAfromSLs","scanlines","PBCAs","MaxSLDist","maxSLDist","MaxLengthDiff","maxLengthDiff","MaxSLDiffX","maxSLDiffX","minSLNumber","SL","refPointX","refPointY","tempPBCA","next","nSL","localizationSLA","borderX","locBorder","borderY","areas","ba","area","startX","endX","Y","s","sl","startY","endY","Img","RLE","SLA","debug","SLs","GRAD_SOBEL_X","GRAD_SOBEL_Y","SLA_STEPS","SLA_PARAMS","self","onmessage","e","grayscaleRes","gradientRes","areaSize","pbca","EANs","PBCAImgData","p","PBCA","idx","rowImgData","reduce","acc","rows","postMessage","type","id","payload","status"],"mappings":"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","file":"0a9cf70fe41961fcad13.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0a9cf70fe41961fcad13","// image preprocessing functions\r\n\r\nfunction getPixelComponent(imageData, x, y, colorIdx) {\r\n  return imageData.data[(y * imageData.width + x) * 4 + colorIdx];\r\n}\r\n// function putPixel(imageData, x, y, r, g, b, a) {\r\n//   a = a || 255;\r\n//   imageData.data[(y * imageData.width + x) * 4 + 0] = r;\r\n//   imageData.data[(y * imageData.width + x) * 4 + 1] = g;\r\n//   imageData.data[(y * imageData.width + x) * 4 + 2] = b;\r\n//   imageData.data[(y * imageData.width + x) * 4 + 3] = a;\r\n// }\r\nfunction getRect(imageData, x, y, width, height) {\r\n  let data = new Uint8ClampedArray(width * height * 4);\r\n\r\n  for (let row = y; row < y + height; row++) {\r\n    const begin = (row * imageData.width + x) * 4;\r\n    const end = begin + (width * 4);\r\n    const dataRow = imageData.data.slice(begin, end)\r\n    const offset = (row - y) * width * 4;\r\n\r\n    data.set(dataRow, offset);\r\n  }\r\n  return new ImageData(data, width, height);\r\n}\r\nfunction getRow(imageData, y) {\r\n  const begin = y * imageData.width * 4;\r\n  const end = begin + imageData.width * 4;\r\n  const data = imageData.data.slice(begin, end);\r\n\r\n  return new ImageData(data, imageData.width, 1);\r\n}\r\n\r\n/*\r\n * @param imgData: ImageData\r\n */\r\nfunction convertToGrayscale(imgData) {\r\n  const w = imgData.width;\r\n  const h = imgData.height;\r\n  let graySum = 0;\r\n  const newImgData = new ImageData(imgData.width, imgData.height);\r\n  let buf = new ArrayBuffer(newImgData.data.length);\r\n  let buf8 = new Uint8ClampedArray(buf);\r\n  let buf32 = new Uint32Array(buf);\r\n\r\n  for (let row = 0; row < h; row++) {\r\n    for (let col = 0; col < w; col++) {\r\n      // gray = 0.299*r + 0.587*g + 0.114*b\r\n      const red = getPixelComponent(imgData, col, row, 0),\r\n        green = getPixelComponent(imgData, col, row, 1),\r\n        blue = getPixelComponent(imgData, col, row, 2);\r\n      const gray = parseInt((0.299 * red) + (0.587 * green) + (0.114 * blue), 10);\r\n            // putPixel(newImgData, col, row, gray, gray, gray);\r\n\r\n      buf32[row * w + col] =\r\n                (255 << 24) |    // alpha\r\n                (gray << 16) |   // blue\r\n                (gray << 8) |    // green\r\n                 gray;           // red\r\n      graySum += gray;\r\n    }\r\n  }\r\n  newImgData.data.set(buf8);\r\n\r\n  // return { array: array, threshold: (graySum / (w * h)) };\r\n  return {imgData: newImgData, threshold: (graySum / (w * h)) };\r\n}\r\n\r\nfunction gradientSimple(imgData, operator) {\r\n  // parameters of operator\r\n  // const side = Math.round(Math.sqrt(operator.length));\r\n  // const halfSide = Math.floor(side / 2);\r\n\r\n  // width/height of the image data\r\n  const w = imgData.width;\r\n  const h = imgData.height;\r\n    // destination array for output and temporary arrays for filling\r\n  let dst = [];\r\n  const newImgData = new ImageData(imgData.width, imgData.height);\r\n  let buf = new ArrayBuffer(newImgData.data.length);\r\n  let buf8 = new Uint8ClampedArray(buf);\r\n  let buf32 = new Uint32Array(buf);\r\n\r\n  let tempLine = [];\r\n  // gradient sum\r\n  let gradSum = 0;\r\n\r\n  // parse through all pixels\r\n  var y, x;\r\n  \r\n  for (y = 0; y < h; y++) {\r\n    tempLine = [];\r\n\r\n    for (x = 0; x < w; x++) {\r\n            // calculate neighbor pixels, escape out of bounds indexes\r\n      const xLeft = Math.max(0, x - 1);\r\n      const xRight = Math.min(w - 1, x + 1);\r\n      const yUp = Math.max(0, y - 1);\r\n      const yDown = Math.min(h - 1, y + 1);\r\n\r\n            // simple gradient (equation 19, page 49)\r\n      const vr = getPixelComponent(imgData, xRight, y, 0),\r\n        vl = getPixelComponent(imgData, xLeft, y, 0),\r\n        vd = getPixelComponent(imgData, x, yDown, 0),\r\n        vu = getPixelComponent(imgData, x, yUp, 0);\r\n      const gradX = Math.abs(vr - vl);\r\n      const gradY = Math.abs(vd - vu);\r\n      let gradient = parseInt((gradX + gradY) / 2, 10);\r\n\r\n      gradSum = gradSum + gradient;\r\n\r\n            // calculate angles\r\n            // let angle = parseInt((Math.atan(gradY / gradX) * 180) / Math.PI);\r\n      let angle = parseInt(((gradX === 0 ? 0 : Math.atan(gradY / gradX)) * 180) / Math.PI, 10);\r\n      let q = (gradX >= 0 && gradY >= 0) ? 1 : -1;\r\n\r\n            // set gradient value for destination pixel\r\n      gradient = Math.abs(gradient);\r\n            // putPixel(newImgData, x, y, gradient, gradient, gradient);\r\n      buf32[y * w + x] =\r\n                (255 << 24) |    // alpha\r\n                (gradient << 16) |    // blue\r\n                (gradient << 8) |    // green\r\n                 gradient;            // red\r\n\r\n      tempLine.push([angle, q]);\r\n    }\r\n    dst.push(tempLine);\r\n  }\r\n  newImgData.data.set(buf8);\r\n\r\n  return { imgData: newImgData, gradient: dst, threshold: (gradSum / (w * h)) };\r\n}\r\n\r\n/*\r\n * @param imgData: ImageData\r\n * @param threshold: number\r\n */\r\nfunction binarize(imgData, threshold) {\r\n  const w = imgData.width;\r\n  const h = imgData.height;\r\n  const newImgData = new ImageData(imgData.width, imgData.height);\r\n  let buf = new ArrayBuffer(newImgData.data.length);\r\n  let buf8 = new Uint8ClampedArray(buf);\r\n  let buf32 = new Uint32Array(buf);\r\n\r\n  for (let row = 0; row < h; row++) {\r\n    for (let col = 0; col < w; col++) {\r\n            // gray = 0.299*r + 0.587*g + 0.114*b\r\n      const red = getPixelComponent(imgData, col, row, 0);\r\n      const value = (red >= threshold) ? 255 : 0;\r\n            // putPixel(newImgData, col, row, value, value, value);\r\n\r\n      buf32[row * w + col] =\r\n                (255 << 24) |    // alpha\r\n                (value << 16) |    // blue\r\n                (value << 8) |    // green\r\n                 value;            // red\r\n    }\r\n  }\r\n  newImgData.data.set(buf8);\r\n\r\n  return newImgData;\r\n}\r\n\r\nfunction gradientAndBinarize(imgData, gradSobelX) {\r\n  const gradientResult = gradientSimple(imgData, gradSobelX);\r\n  const binImgData = binarize(gradientResult.imgData, gradientResult.threshold);\r\n\r\n    // image data was transformed,\r\n    // return meta gradient info\r\n  return {imgData: binImgData, gradient: gradientResult.gradient};\r\n}\r\n\r\n// Just return a value to define the module export.\r\n// This example returns an object, but the module\r\n// can return a function as the exported value.\r\nmodule.exports = {\r\n  getRect,\r\n  getRow,\r\n  convertToGrayscale,\r\n  gradientSimple,\r\n  binarize,\r\n  gradientAndBinarize,\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Img.js","// RLE decoding functions\r\n\r\n// function getPixelComponent(imageData, x, y, colorIdx) {\r\n//   return imageData.data[(y * imageData.width + x) * 4 + colorIdx];\r\n// }\r\n\r\nfunction runLengthEncoding(row) {\r\n  var w = row.length;\r\n  var result = [];\r\n  var previous = null;\r\n  var n = 0;\r\n\r\n  var x, current;\r\n\r\n  for (x = 0; x < w; x++) {\r\n    current = row[x];\r\n\r\n    if (current !== previous && previous != null) {\r\n      result.push({ val: previous, len: n });\r\n      n = 0;\r\n    }\r\n    n++;\r\n    previous = current\r\n  }\r\n\r\n  if (n > 0) {\r\n    result.push({ val: previous, len: n });\r\n  }\r\n\r\n  const length = result.length;\r\n  const start = result[0].val === 255 ? 1 : 0;\r\n  const end = result[length - 1].val === 255 ? (length - 1) : length;\r\n\r\n  return result.slice(start, end);\r\n}\r\n\r\nfunction sliceDigits(rle) {\r\n  const units = 59;\r\n  var result = [];\r\n  var digits = [];\r\n  const dsize = 4;  // bars per digit (2 black, 2 white)\r\n  const outer = 3;  // outer guards (black, white, black)\r\n  const inner = 5;  // inner guard (white, black, white, black, white)\r\n\r\n  var m, i;\r\n\r\n  // test, if units is bigger than\r\n  if (rle.length >= units) {\r\n    const possibilites = rle.length - units + 1;\r\n\r\n    for (m = 0; m < possibilites; m++) {\r\n      digits = [];\r\n\r\n      for (i = 0; i < 6; i++) {\r\n        const pos = m + outer + (i * dsize);\r\n        const digit = rle.slice(pos, pos + dsize);\r\n\r\n        digits.push(digit);\r\n      }\r\n\r\n      for (i = 6; i < 12; i++) {\r\n        const pos = m + outer + inner + (i * dsize);\r\n        const digit = rle.slice(pos, pos + dsize);\r\n\r\n        digits.push(digit);\r\n      }\r\n\r\n      result.push(digits);\r\n    }\r\n\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nfunction normalizeDigits(digits) {\r\n  var normalization = [];\r\n  var sum;\r\n\r\n  for (let d in digits) {\r\n    let digit = digits[d];\r\n    sum = 0;\r\n\r\n    for (let m in digit) {\r\n      const module = digit[m];\r\n      sum += module.len;\r\n    }\r\n\r\n    let row = [];\r\n\r\n    for (let m in digit) {\r\n      row.push(digit[m].len / sum);\r\n    }\r\n    normalization.push(row);\r\n  }\r\n  return normalization;\r\n}\r\n\r\nfunction mod(a, n) {\r\n  return ((a % n) + n) % n;\r\n}\r\n\r\nfunction findSimilarNumbers(normalization) {\r\n  /* eslint-disable max-len */\r\n  var defaults = {\r\n    leftDigitsOdd: [[3, 2, 1, 1], [2, 2, 2, 1], [2, 1, 2, 2], [1, 4, 1, 1], [1, 1, 3, 2], [1, 2, 3, 1], [1, 1, 1, 4], [1, 3, 1, 2], [1, 2, 1, 3], [3, 1, 1, 2]],\r\n    leftDigitsEven: [[1, 1, 2, 3], [1, 2, 2, 2], [2, 2, 1, 2], [1, 1, 4, 1], [2, 3, 1, 1], [1, 3, 2, 1], [4, 1, 1, 1], [2, 1, 3, 1], [3, 1, 2, 1], [2, 1, 1, 3]],\r\n    rightDigits: [[3, 2, 1, 1], [2, 2, 2, 1], [2, 1, 2, 2], [1, 4, 1, 1], [1, 1, 3, 2], [1, 2, 3, 1], [1, 1, 1, 4], [1, 3, 1, 2], [1, 2, 1, 3], [3, 1, 1, 2]],\r\n    parity: ['OOOOOO', 'OOEOEE', 'OOEEOE', 'OOEEEO', 'OEOOEE', 'OEEOOE', 'OEEEOO', 'OEOEOE', 'OEOEEO', 'OEEOEO']\r\n  }\r\n  /* eslint-enable max-len */\r\n\r\n  var sum;\r\n  var i, j;\r\n\r\n  // convert EAN tables\r\n  for (i in defaults.leftDigitsOdd) {\r\n    const digit = defaults.leftDigitsOdd[i];\r\n    sum = 0;\r\n\r\n    for (let m in digit) {\r\n      sum += digit[m];\r\n    }\r\n\r\n    for (let m in digit) {\r\n      digit[m] = digit[m] / sum;\r\n    }\r\n  }\r\n\r\n  for (i in defaults.leftDigitsEven) {\r\n    const digit = defaults.leftDigitsEven[i];\r\n    sum = 0;\r\n\r\n    for (let m in digit) {\r\n      sum += digit[m];\r\n    }\r\n\r\n    for (let m in digit) {\r\n      digit[m] = digit[m] / sum;\r\n    }\r\n  }\r\n\r\n  for (i in defaults.rightDigits) {\r\n    const digit = defaults.rightDigits[i];\r\n    sum = 0;\r\n\r\n    for (let m in digit) {\r\n      sum += digit[m];\r\n    }\r\n\r\n    for (let m in digit) {\r\n      digit[m] = digit[m] / sum;\r\n    }\r\n  }\r\n\r\n  // check for similarity\r\n  const result = [];\r\n  // left digits\r\n  var difference;\r\n\r\n  for (i = 0; i < 6; i++) {\r\n    const digit = normalization[i];\r\n    let digitSim = [];\r\n\r\n    for (let o in defaults.leftDigitsOdd) {\r\n      const template = defaults.leftDigitsOdd[o];\r\n      difference = 0;\r\n\r\n      for (j = 0; j < 4; j++) {\r\n        difference += Math.abs(template[j] - digit[j]);\r\n      }\r\n      digitSim.push(difference);\r\n    }\r\n    result.push({ odd: digitSim, even: 0 });\r\n\r\n    digitSim = [];\r\n    for (let o in defaults.leftDigitsEven) {\r\n      const template = defaults.leftDigitsEven[o];\r\n      difference = 0;\r\n\r\n      for (j = 0; j < 4; j++) {\r\n        difference += Math.abs(template[j] - digit[j]);\r\n      }\r\n      digitSim.push(difference);\r\n    }\r\n    result[i].even = digitSim;\r\n  }\r\n\r\n  // right digits\r\n  for (i = 6; i < 12; i++) {\r\n    const digit = normalization[i];\r\n    let digitSim = [];\r\n\r\n    for (let o in defaults.rightDigits) {\r\n      const template = defaults.rightDigits[o];\r\n      difference = 0;\r\n\r\n      for (j = 0; j < 4; j++) {\r\n        difference += Math.abs(template[j] - digit[j]);\r\n      }\r\n      digitSim.push(difference);\r\n    }\r\n    result.push({ odd: 0, even: digitSim });\r\n  }\r\n\r\n  var parity = '';\r\n  var EAN = '';\r\n\r\n  for (let r in result) {\r\n    const digit = result[r];\r\n    let number = 0;\r\n\r\n    if (r < 6) {\r\n      const oddMin = Math.min.apply(Math, digit.odd);\r\n      const odd = digit.odd.indexOf(oddMin);\r\n\r\n      const evenMin = Math.min.apply(Math, digit.even);\r\n      const even = digit.even.indexOf(evenMin);\r\n\r\n      if (oddMin < evenMin) {\r\n        number = odd;\r\n        parity += 'O';\r\n      } else {\r\n        number = even;\r\n        parity += 'E';\r\n      }\r\n    } else {\r\n      number = digit.even.indexOf(Math.min.apply(Math, digit.even));\r\n    }\r\n\r\n    EAN += number.toString();\r\n  }\r\n\r\n  // calculate first digit from parity!!!\r\n  const firstDigit = defaults.parity.indexOf(parity).toString();\r\n  if (parseInt(firstDigit, 10) < 0) {\r\n    EAN = 'false';\r\n  } else {\r\n    EAN = firstDigit + EAN;\r\n\r\n    var checksum = 0;\r\n    for (i = 0; i < 12; i++) {\r\n      checksum += EAN[i] * (mod(i + 1, 2) ? 1 : 3);\r\n    }\r\n\r\n    if (!mod((10 - mod(checksum, 10)), 10) === parseInt(EAN[12], 10)) {\r\n      EAN = 'false';\r\n    }\r\n  }\r\n\r\n  return EAN;\r\n}\r\n\r\nmodule.exports = {\r\n  runLengthEncoding,\r\n  sliceDigits,\r\n  normalizeDigits,\r\n  findSimilarNumbers,\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/RLE.js","// SLA localization functions\r\n\r\nfunction getPixelComponent(imageData, x, y, colorIdx) {\r\n  return imageData.data[(y * imageData.width + x) * 4 + colorIdx];\r\n}\r\n\r\nfunction findScanlines(imgData, gradient, SLASteps, SlaParams) {\r\n    // width/height of the image data\r\n  const w = imgData.width;\r\n  const h = imgData.height;\r\n    // var max = Math.max(array.length, array[0].length);\r\n  const max = w;    // take width because of horizontal barcodes\r\n\r\n    // set parameters depending on image dimensions\r\n  const steps = Math.floor(h / (h * SLASteps));\r\n  const MaxDist = (max * SlaParams.maxDist) / 100;\r\n  const MinLength = (max * SlaParams.minLength) / 100;\r\n\r\n    // store result for scanline\r\n  let resultSLs = [];\r\n\r\n  for (var row = 0; row < h; row += steps) {\r\n\r\n    for (var pixel = 0; pixel < (w - MinLength); pixel++) {\r\n\r\n            // test if gradient pixel\r\n      if (getPixelComponent(imgData, pixel, row, 0) === 255) {\r\n        const angle = gradient[row][pixel][0];\r\n        let angleSum = angle;\r\n        var scanlineLength = 0, foundSomething = 1, nothingFound = 0;\r\n        let scanline = { x: null, y: null, scanlineLength: 0, angleAVG: null };\r\n\r\n        for (let i = pixel + 1; i < w; i++) {   // loop 1\r\n          scanlineLength++;\r\n\r\n                    // test if gradient and increase counter if similar\r\n          var othPixelValue = getPixelComponent(imgData, i, row, 0)\r\n          const othAngle = gradient[row][i][0];\r\n          if (othPixelValue === 255 &&\r\n            ((othAngle >= angle - SlaParams.angleDiff) &&\r\n            (othAngle <= angle + SlaParams.angleDiff))) {\r\n            foundSomething++;\r\n            angleSum = angleSum + othAngle;\r\n            nothingFound = 0;\r\n          } else {\r\n            nothingFound++;\r\n          }\r\n\r\n                    // test for thresholds\r\n                    // if exceeds maxDistance or is last pixel of row\r\n          if (nothingFound > MaxDist || i === (w - 1)) {\r\n            if (foundSomething >= SlaParams.minGradient) {\r\n              scanline = {\r\n                x: pixel,\r\n                y: row,\r\n                scanlineLength: (scanlineLength - nothingFound),\r\n                angleAVG: parseInt(angleSum / foundSomething, 10)\r\n              };\r\n            }\r\n            break;\r\n          }\r\n        }   // end loop 1\r\n\r\n        if (scanline.scanlineLength >= MinLength) {\r\n          resultSLs.push(scanline);\r\n        }\r\n\r\n                // set pixel, where to start from after this search\r\n        pixel = Math.min(w - 1, pixel + scanline.scanlineLength);\r\n      }\r\n    }\r\n  }\r\n\r\n  return resultSLs;\r\n}\r\n\r\nfunction findPBCAfromSLs(width, scanlines, SlaParams) {\r\n  var PBCAs = [];\r\n\r\n    // var max = Math.max(imageData.height, imageData.width);\r\n  var max = width;  // take width because of horizontal barcodes\r\n\r\n  var MaxSLDist = (max * SlaParams.maxSLDist) / 100;\r\n  var MaxLengthDiff = (max * SlaParams.maxLengthDiff) / 100;\r\n  var MaxSLDiffX = (max * SlaParams.maxSLDiffX) / 100;\r\n\r\n    // parse all SLs, but don't consider last, when there aren't enough for SlaParams.maxSLNumber\r\n  for (var i = 0; i < scanlines.length - SlaParams.minSLNumber; i++) {\r\n    var SL = scanlines[i];\r\n    var length = SL.scanlineLength;\r\n    var angle = SL.angleAVG;\r\n    var refPointX = SL.x;\r\n    var refPointY = SL.y;\r\n        // reset PBCA and fill with current SL\r\n    var tempPBCA = [];\r\n    tempPBCA.push(SL);\r\n        // next scanline to process, if PBCA is found\r\n    var next = i;\r\n\r\n    for (var j = (i + 1) ; j < scanlines.length; j++) {\r\n      var nSL = scanlines[j];\r\n\r\n            // test if SL is within range\r\n      if (nSL.y <= refPointY + MaxSLDist) {\r\n\r\n                // test if angle is similar and length is similar to previous\r\n        if ((nSL.y !== refPointY) && // Y coordinate different ?\r\n                    (nSL.x >= refPointX - MaxSLDiffX) &&\r\n                    (nSL.x <= refPointX + MaxSLDiffX) &&\r\n                    (nSL.angleAVG >= angle - SlaParams.angleDiff) &&\r\n                    (nSL.angleAVG <= angle + SlaParams.angleDiff) &&\r\n                    (nSL.scanlineLength >= length - MaxLengthDiff) &&\r\n                    (nSL.scanlineLength <= length + MaxLengthDiff)) {\r\n\r\n                    // put SL into PBCA\r\n          tempPBCA.push(nSL);\r\n          next = j;\r\n\r\n                    // set adapted length and angle to compare with next line\r\n          length = nSL.scanlineLength;\r\n          angle = nSL.angleAVG;\r\n          refPointX = nSL.x;\r\n          refPointY = nSL.y;\r\n\r\n        }\r\n      } else { // break because they are sorted by Y and following will be out of range\r\n        break;\r\n      }\r\n    }\r\n\r\n        // store temporary PBCA in result, if enough SLs where found\r\n    if (tempPBCA.length >= SlaParams.minSLNumber) {\r\n      PBCAs.push(tempPBCA);\r\n    } else {\r\n      next = i;\r\n    }\r\n    i = next;\r\n  }\r\n\r\n  return PBCAs;\r\n}\r\n\r\n/**\r\n * @param imgData: ImageData\r\n * @param gradient: Array of [angle, q]\r\n * @param SLASteps: number\r\n * @param SlaParams: object\r\n */\r\nfunction localizationSLA(imgData, gradient, SLASteps, SlaParams) {\r\n  // calulate border aroung barcode image\r\n  // var max = Math.max(imageData.height, imageData.width);\r\n  var max = imgData.width;  // take width because of horizontal barcodes\r\n  var borderX = Math.floor((max * locBorder) / 100);\r\n  var borderY = 0;// (max * locBorder) / 100;\r\n\r\n  // find scanlines that fit into requirements\r\n  var scanlines = findScanlines(imgData, gradient, SLASteps, SlaParams);\r\n\r\n  // compare scanlines\r\n  var areas = findPBCAfromSLs(imgData.width, scanlines, SlaParams);\r\n\r\n  // edit areas for returning results\r\n  // var areaSize = 0;\r\n  var result = [];\r\n  for (let ba in areas) {\r\n    var area = areas[ba];\r\n    var startX = [], endX = [], Y = [];\r\n\r\n    for (let s in area) {\r\n      var sl = area[s];\r\n      startX.push(sl.x);\r\n      endX.push(sl.x + sl.scanlineLength);\r\n      Y.push(sl.y);\r\n    }\r\n\r\n    result.push({\r\n      startX: Math.min.apply(null, startX) - borderX,\r\n      endX: Math.max.apply(null, endX) + borderX,\r\n      startY: Math.min.apply(null, Y) - borderY,\r\n      endY: Math.max.apply(null, Y) + borderY\r\n    });\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nmodule.exports = {\r\n  findScanlines,\r\n  findPBCAfromSLs,\r\n  localizationSLA,\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/SLA.js","/* --------------------------------------------------\r\n\r\nSlaRle.js by BobbyJay <https://github.com/BobbyJay/SlaRle.js>\r\n\r\nThis software is provided under the MIT license, http://opensource.org/licenses/MIT.\r\nAll use of this software must include this\r\ntext, including the reference to the creator of the original source code. The\r\noriginator accepts no responsibility of any kind pertaining to\r\nuse of this software.\r\n\r\nCopyright (c) 2015 BobbyJay\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n\r\n------------------------ */\r\n\r\n/* eslint-disable no-unused-vars */\r\n/* global self:true */\r\n/* global onmessage:true */\r\n\r\nimport * as Img from './Img';\r\nimport * as RLE from './RLE';\r\nimport * as SLA from './SLA';\r\n\r\n// self.importScripts('Img.js', 'SLA.js', 'RLE.js');\r\n\r\nconst debug = false;\r\n\r\nconst locBorder = 0;// 3;\t// additional border for located barcode in %\r\n\r\nconst SLs = [0.5, 0.4, 0.6, 0.3, 0.7, 0.2, 0.8, 0.1, 0.9];\r\n\r\n// Sobel gradient operator\r\nconst GRAD_SOBEL_X = [\r\n  -1, 0, 1,\r\n  -2, 0, 2,\r\n  -1, 0, 1\r\n];\r\nconst GRAD_SOBEL_Y = [\r\n  -1, -2, -1,\r\n  0, 0, 0,\r\n  1, 2, 1\r\n];\r\n\r\n// SLA algorithm parameters\r\n// limits and performance optimizations for scanlines\r\nconst SLA_STEPS = 1 / 3;\t// steps to jump over image rows, shows the amount of rows that will be parsed in %\r\n// const SLA_LIMIT_X = 20;\r\n// const SLA_LIMIT_Y = 20;\r\n\r\n// parameters\r\nconst SLA_PARAMS = {\r\n  locBorder,\r\n  angleDiff: 11,\t// difference of angles for gradients and SLs\r\n  maxDist: 1.7, // 3, // min gradient distance in %\r\n  minLength: 17, // min SL length in % of image width\r\n  minGradient: 100, // 44 is the limit theoretically, min amount of gradients in SL\r\n  maxSLDist: 1.5, // max scanline distance in %\r\n  maxLengthDiff: 2, // max SL length difference in %\r\n  maxSLDiffX: 2, // max difference of start point X of SL in %\r\n  minSLNumber: parseInt(25 * SLA_STEPS, 10), // min number of SLs for PBCA\r\n}\r\n\r\n// receive trigger from program\r\n// initiate the localization algorithm\r\nself.onmessage = function (e) {\r\n  if (e.data.imgData) {\r\n\r\n\t\t// ---------------\r\n\t\t// LOCALIZATION\r\n\t\t// ---------------\r\n\t\t// convert to grayscale image\r\n    let grayscaleRes = Img.convertToGrayscale(e.data.imgData);\r\n\r\n\t\t// use gradient operator\r\n    let gradientRes = Img.gradientAndBinarize(grayscaleRes.imgData, GRAD_SOBEL_X);\r\n\r\n\t\t// start localization\r\n    var PBCAs = [];\r\n    PBCAs = SLA.localizationSLA(gradientRes.imgData, gradientRes.gradient, SLA_STEPS, SLA_PARAMS);\r\n    gradientRes.imgData = null;\r\n    gradientRes.gradient = null;\r\n    gradientRes = null;\r\n\r\n\t\t// return biggest PBCA for localization comparison (Jaccard)\r\n    var areaSize = 0;\r\n    var result = [];\r\n    for (let ba in PBCAs) {\r\n      var pbca = PBCAs[ba];\r\n\r\n      var area = Math.max(0, pbca.endX - pbca.startX) * Math.max(0, pbca.endY - pbca.startY);\r\n\r\n      if (area > areaSize) {\r\n        areaSize = area;\r\n        result = [];\r\n        result.push(pbca);\r\n      }\r\n    }\r\n\t\t// postMessage({ type:'localization', areas: result });\r\n\r\n\t\t// -----------\r\n\t\t// DECODING\r\n\t\t// -----------\r\n\r\n    const EANs = [];\r\n    let PBCAImgData;\r\n    for (let p in PBCAs) {\r\n      let EAN = 'false';\r\n      var PBCA = PBCAs[p];\r\n\r\n\t\t\t// slicing imageArrayGray.array to PBCA size\r\n      PBCAImgData = Img.getRect(\r\n\t\t\t\tgrayscaleRes.imgData,\r\n\t\t\t\tPBCA.startX,\r\n\t\t\t\tPBCA.startY,\r\n\t\t\t\t(PBCA.endX - PBCA.startX),\r\n\t\t\t\t(PBCA.endY - PBCA.startY)\r\n\t\t\t)\r\n\r\n\t\t\t// decoding for each scanline\r\n      for (let s in SLs) {\r\n        const idx = Math.floor(PBCAImgData.height * SLs[s]);\r\n        const rowImgData = Img.getRow(PBCAImgData, idx)\r\n        const sum = rowImgData.data.reduce(function (acc, val, idx) { return (idx % 4 === 0) ? acc + val : acc}, 0);\r\n\r\n\t\t\t\t// select grayscale scanline\r\n        const sl = Img.binarize(rowImgData, (sum / rowImgData.width));\r\n\r\n        const row = new Uint8ClampedArray(rowImgData.width)\r\n        sl.data.reduce(\r\n          function (acc, val, idx) {\r\n            if (idx % 4 === 0) {\r\n              acc[idx / 4] = val;\r\n            }\r\n            return acc;\r\n          },\r\n          row\r\n        )\r\n        // RLEncoding the scanline\r\n        const rle = RLE.runLengthEncoding(row);\r\n        const rows = RLE.sliceDigits(rle);\r\n\r\n        for (let r in rows) {\r\n          const digits = rows[r];\r\n\r\n          if (digits.length === 12) {\r\n            const normalization = RLE.normalizeDigits(digits);\r\n            EAN = RLE.findSimilarNumbers(normalization);\r\n            if (EAN !== 'false') {\r\n              EANs.push(EAN);\r\n              break;\r\n            }\r\n          } else {\r\n            EAN = 'false';\r\n          }\r\n        }\r\n\r\n        if (EAN !== 'false') {\r\n          break;\r\n        }\r\n\r\n      }\t// end parsing all Scanlines SLs\r\n\r\n\t\t\t// if (EAN != \"false\") {\r\n\t\t\t//\tbreak;\r\n\t\t\t// }\r\n\r\n    }\t// end parsing all PBCAs\r\n\r\n\t\t// ---------\r\n\t\t// RESULTS\r\n\t\t// ---------\r\n\r\n    grayscaleRes.imgData = null;\r\n    PBCAs = null;\r\n    PBCAImgData = null;\r\n    result = null;\r\n\r\n    postMessage({ type: 'decoding', id: e.data.id, payload: {EAN: EANs} });\r\n  } else {\r\n    postMessage({ type: 'decoding', id: e.data.id, payload: {EAN: []} });\r\n  }\r\n};\r\n\r\n// signal that the worker is ready\r\npostMessage({ type: 'status', payload: {status: 'ready'} });\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/SlaRleWorker.js"],"sourceRoot":""}